package com.project.quanlybanhang_api.controller;

import java.rmi.server.Operation;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.project.quanlybanhang_api.entity.Product;
import com.project.quanlybanhang_api.service.ProductServiceImp;
import com.project.quanlybanhang_api.service.UpLoadFileService;

@RestController
@RequestMapping("/product")
public class ProductController {

	@Autowired
	ProductServiceImp productServiceImp;
	
	@Autowired
	UpLoadFileService upLoadFileService;
	
	// List Product
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	@GetMapping("/list")
	public ResponseEntity<?> getAllStaff() {
		  List<Product> list = productServiceImp.findAll();
		  return new ResponseEntity<List<Product>>(list,HttpStatus.OK);
	}
	// Insert Product
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	@PostMapping("/insert")
	public ResponseEntity<?> insertProduct(@RequestParam("file") MultipartFile file,@RequestParam("ProductName") String ProductName,@RequestParam("ProductDescription") String ProductDescription){
		upLoadFileService.init();
		if(upLoadFileService.saveFile(file)) {
			Product product = new Product();
			product.setProductName(ProductName);
			product.setProductDescription(ProductDescription);
			product.setProductAvatar(file.getOriginalFilename());
			productServiceImp.insertProduct(product);
		}		
		return new ResponseEntity<String>("insert complete", HttpStatus.OK);
	}
	// Delete Product
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	@DeleteMapping("/delete")
	public ResponseEntity<?> deleteProduct(@RequestParam("Id") int Id){
		productServiceImp.deleteProduct(Id);
		return new ResponseEntity<String>("delete complete", HttpStatus.OK);
	}
	// Update Product
	@PreAuthorize("hasRole('ROLE_ADMIN')")
	@PutMapping("/update/{id}")
	public ResponseEntity<?> updateProduct(@RequestBody Product product,@PathVariable("id") int Id){
		Product updateProduct = productServiceImp.findById(Id);
		if(product.getProductName() != null) {
			updateProduct.setProductName(product.getProductName());
		}
		productServiceImp.updateProduct(updateProduct);
		return new ResponseEntity<Product>(updateProduct, HttpStatus.OK);
	}
}
